// CODIGO QUE PUEDE SERVIR DE REFERENCIA PARA HACER LAS MEDIA QUERIES EN Fish.jsx
  // let mm = gsap.matchMedia();
  // const scroll = useScroll();
  // useFrame(() => {
  //   tl.current.seek(scroll.offset * tl.current.duration());
  // });
  // useLayoutEffect(() => {
  //   tl.current = gsap.timeline();
  //   tl.current.to(
  //     group.current.position,
  //     {
  //       duration: 2,
  //       y: -FLOOR_HEIGHT * (NB_FLOORS - 1),
  //     },
  //     0
  //   );
  // }, []);
  // mm.add(
  //   {
  //     // set up any number of arbitrarily-named conditions. The function below will be called when ANY of them match.
  //     isDesktop: `(min-width: 800px)`,
  //     isMobile: `(max-width: 799px)`,
  //     reduceMotion: "(prefers-reduced-motion: reduce)",
  //   },
  //   (context) => {
  //     useLayoutEffect(() => {
  //       let { isDesktop } = context.conditions;
  //       isDesktop ? camera.position.set(0, 0, 0) : camera.position.set(0, 0, 0);

  //       // gsap.to(camera.position, { x: -1, y: 0.5 });
  //       let tl = gsap.timeline({
  //         scrollTrigger: {
  //           trigger: "#menu",
  //           start: isDesktop ? "top+=100 top" : "top+=100 top",
  //           endTrigger: "#footer",
  //           end: "top top",
  //           scrub: 1,
  //           markers: true,
  //         },
  //       });

  //       tl.fromTo(camera.position, { y: 0 }, { x: 0 })
  //         .to(camera.position, {
  //           duration: 3,
  //           x: 0,
  //           y: 0,
  //         })
  //         .to(scene.rotation, {
  //           y: isDesktop ? 0 : 0,
  //         });
  //       // .to(camera.position, {
  //       //   duration: 1,
  //       //   x: 3,
  //       //   y: 1,
  //       // })
  //       // .to(scene.rotation, {
  //       //   y: isDesktop ? 1.5 : 0,
  //       // })
  //       // .to(scene.rotation, {
  //       //   x: 1,
  //       // })
  //       // .to(camera.position, {
  //       //   y: isDesktop ? 1 : 0,
  //       //   x: isDesktop ? -3 : 0,
  //       // })
  //       // .to(scene.rotation, {
  //       //   y: 5,
  //       // })
  //       // .to(scene.rotation, {
  //       //   x: 0,
  //       // })
  //       // .to(scene.rotation, { y: isDesktop ? -1.5 : 3, z: 0 })
  //       // .to(camera.position, { x: 3 })
  //       // .to(scene.rotation, { y: 1.5, z: 0 })
  //       // .to(camera.position, { z: isDesktop ? 5 : 8 })
  //       // // .to(camera.position, { z: 6, x: -1 })
  //       // .to(scene.rotation, { z: 6.3, y: 0, duration: 1 })
  //       // .to(camera.position, { x: 0, y: 0.7 })
  //       // .to(scene.rotation, { x: 0.8 })
  //       // .to(camera.position, { z: 10 }, "key2")
  //       // .to(scene.rotation, { x: 0 });

  //       // .fromTo(camera.position, { x: 4 }, { x: 0 });
  //       return () => {
  //         if (tl) tl.kill();
  //       };
  //     }, []);
  //   }
  // );