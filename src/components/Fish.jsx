/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.5 fish.gltf --typescript
Author: somitsu (https://sketchfab.com/somitsu)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/tosakin-goldfish-b2f0681c1e2145bcb0289f03ed75ea37
Title: Tosakin goldfish
*/

import React, { useRef, useEffect, useLayoutEffect } from "react";
import { useGLTF, useAnimations, useScroll } from "@react-three/drei";
import { useThree } from "@react-three/fiber";
import { useFrame } from "@react-three/fiber";
import { gsap } from "gsap";

export const FLOOR_HEIGHT = 2.3;
export const NB_FLOORS = 3;

export default function Model(props) {
  const ref = useRef();
  const { nodes, materials, animations } = useGLTF("../../public/fish.gltf");
  const { actions } = useAnimations(animations, ref);
  const tl = useRef();

  // let camera = useThree((state) => state.camera);
  // let scene = useThree((state) => state.scene);
  useEffect(() => {
    if (actions.Scene) {
      actions.Scene.play();
      actions.Scene.timeScale = 0.5;
    }
    // console.log("actions:", actions);
  }, []);

  const scroll = useScroll();

  useFrame(() => {
    tl.current.seek(scroll.offset * tl.current.duration());
  });

  useLayoutEffect(() => {
    tl.current = gsap.timeline();

    // VERTICAL ANIMATION
    tl.current.to(
      ref.current.position,
      {
        duration: 2,
        y: -FLOOR_HEIGHT * (NB_FLOORS - 1),
      },
      0
    );

    // Office Rotation
    tl.current.to(
      ref.current.rotation,
      { duration: 1, x: 0, y: Math.PI / 6, z: 0 },
      0
    );
    tl.current.to(
      ref.current.rotation,
      { duration: 1, x: 0, y: -Math.PI / 6, z: 0 },
      1
    );

    // Office movement
    tl.current.to(
      ref.current.position,
      {
        duration: 1,
        x: -1,
        z: 2,
      },
      0
    );
    tl.current.to(
      ref.current.position,
      {
        duration: 1,
        x: 1,
        z: 2,
      },
      1
    );
  }, []);

  return (
    <group ref={ref} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group
            name="724c0536378742e888f3d6d7ab2b8ecafbx"
            rotation={[Math.PI / 2, 0, 0]}
          >
            <group name="Object_2">
              <group name="RootNode">
                <group
                  name="finDorsalB"
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={30}
                />
                <group
                  name="finAnalB"
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={30}
                />
                <group
                  name="finPelvicB"
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={30}
                />
                <group
                  name="finPectoralB"
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={30}
                />
                <group
                  name="finCaudalB"
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={30}
                />
                <group name="body" rotation={[-Math.PI / 2, 0, 0]} scale={30} />
                <group
                  name="eye_L"
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={30}
                />
                <group
                  name="RIG_Tosakin"
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={30}
                >
                  <group name="Object_12">
                    <primitive object={nodes._rootJoint} />
                    <group
                      name="Object_14"
                      rotation={[-Math.PI / 2, 0, 0]}
                      scale={30}
                    />
                    <group
                      name="Object_16"
                      rotation={[-Math.PI / 2, 0, 0]}
                      scale={30}
                    />
                    <group
                      name="Object_18"
                      rotation={[-Math.PI / 2, 0, 0]}
                      scale={30}
                    />
                    <group
                      name="Object_20"
                      rotation={[-Math.PI / 2, 0, 0]}
                      scale={30}
                    />
                    <group
                      name="Object_22"
                      rotation={[-Math.PI / 2, 0, 0]}
                      scale={30}
                    />
                    <group
                      name="Object_24"
                      rotation={[-Math.PI / 2, 0, 0]}
                      scale={30}
                    />
                    <group
                      name="Object_26"
                      rotation={[-Math.PI / 2, 0, 0]}
                      scale={30}
                    />
                    <group
                      name="Object_94"
                      rotation={[-Math.PI / 2, 0, 0]}
                      scale={30}
                    />
                    <skinnedMesh
                      name="Object_15"
                      geometry={nodes.Object_15.geometry}
                      material={materials.M_TosakinFins}
                      skeleton={nodes.Object_15.skeleton}
                    />
                    <skinnedMesh
                      name="Object_17"
                      geometry={nodes.Object_17.geometry}
                      material={materials.M_TosakinFins}
                      skeleton={nodes.Object_17.skeleton}
                    />
                    <skinnedMesh
                      name="Object_19"
                      geometry={nodes.Object_19.geometry}
                      material={materials.M_TosakinFins}
                      skeleton={nodes.Object_19.skeleton}
                    />
                    <skinnedMesh
                      name="Object_21"
                      geometry={nodes.Object_21.geometry}
                      material={materials.M_TosakinFins}
                      skeleton={nodes.Object_21.skeleton}
                    />
                    <skinnedMesh
                      name="Object_23"
                      geometry={nodes.Object_23.geometry}
                      material={materials.M_TosakinFins}
                      skeleton={nodes.Object_23.skeleton}
                    />
                    <skinnedMesh
                      name="Object_25"
                      geometry={nodes.Object_25.geometry}
                      material={materials.M_TosakinBody}
                      skeleton={nodes.Object_25.skeleton}
                    />
                    <skinnedMesh
                      name="Object_27"
                      geometry={nodes.Object_27.geometry}
                      material={materials.M_Sclara}
                      skeleton={nodes.Object_27.skeleton}
                    />
                    <skinnedMesh
                      name="Object_28"
                      geometry={nodes.Object_28.geometry}
                      material={materials.M_Iris}
                      skeleton={nodes.Object_28.skeleton}
                    />
                    <skinnedMesh
                      name="Object_29"
                      geometry={nodes.Object_29.geometry}
                      material={materials.M_Lens}
                      skeleton={nodes.Object_29.skeleton}
                    />
                    <skinnedMesh
                      name="Object_30"
                      geometry={nodes.Object_30.geometry}
                      material={materials.M_Cornea}
                      skeleton={nodes.Object_30.skeleton}
                    />
                    <skinnedMesh
                      name="Object_95"
                      geometry={nodes.Object_95.geometry}
                      material={materials.M_Sclara}
                      skeleton={nodes.Object_95.skeleton}
                    />
                    <skinnedMesh
                      name="Object_96"
                      geometry={nodes.Object_96.geometry}
                      material={materials.M_Iris}
                      skeleton={nodes.Object_96.skeleton}
                    />
                    <skinnedMesh
                      name="Object_97"
                      geometry={nodes.Object_97.geometry}
                      material={materials.M_Lens}
                      skeleton={nodes.Object_97.skeleton}
                    />
                    <skinnedMesh
                      name="Object_98"
                      geometry={nodes.Object_98.geometry}
                      material={materials.M_Cornea}
                      skeleton={nodes.Object_98.skeleton}
                    />
                  </group>
                </group>
                <group
                  name="eye_R"
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={30}
                />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("../../public/fish.gltf");
